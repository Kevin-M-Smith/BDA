}
AIC
arima(tsd$value)
arima(tsd$value, order=c(3,0,3))
arima(tsd$value, order=c(4,0,4))
auto.arima(tsd$value, stepwise=FALSE)
library(forecast)
auto.arima(tsd$value, stepwise=FALSE)
?auto.arima
install.packages('knitrBootstrap')
library(knitrBootstrap)
knitrBootstrap::bootstrap_document
knitrBootstrap:::bootstrap_document
knitrBootstrap::bootstrap_document
?knitrBootstrap
??knitrBootstrap
detach("package:knitrBootstrap", unload=TRUE)
library(devtools)
install_github("jimhester/knitrBootstrap")
library(knitrBootstrap)
bootstrap.show.code
session
sessionInfo
sessionInfo()
grid.locator
library(grid)
grid.locator
grid.locator()
library(lattice)
AIC
levelplot(AIC)
lline(v=1)
llines
?llines
lpoints(2)
xy c(2,2)
xy = c(2,2)
lpoints(xy)
llines(1)
lsegments(1,2,3,3)
lsegments(1,2,3,3, col="black")
lsegments(0,4,0,4, col="black", lty=1, pch=2)
grid.locator
grid.locator()
dfg
removeLogMean <- function(x){
as.numeric(x[3]) - logmeans()[strtoi(x[2])];
}
addLogMean <- function(x){
as.numeric(x[3]) + logmeans()[strtoi(x[2])];
}
dfgs <- dfg
dfgs$Flow <- log(dfgs$Flow)
dfgs$Flow <- apply(dfgs, 1, removeLogMean)
logmeans = function(){
ms = list()
for(i in 1:12){
ms[i] = mean(log(dfg$Flow[which(dfg$MID==i)]))
}
unlist(ms)
}
removeLogMean <- function(x){
as.numeric(x[3]) - logmeans()[strtoi(x[2])];
}
addLogMean <- function(x){
as.numeric(x[3]) + logmeans()[strtoi(x[2])];
}
dfgs <- dfg
dfgs$Flow <- log(dfgs$Flow)
dfgs$Flow <- apply(dfgs, 1, removeLogMean)
dfgs$Flow
plot(dfg$Flow)
plot(dfgs$Flow)
Arima(dfg$Flow, lambda=0)
library(forecast)
Arima(dfg$Flow, lambda=0)
Arima(dfg$Flow, lambda=0, order=c(12,0,2))
Arima(dfg$Flow, lambda=0, order=c(1,12,1))
Arima(dfg$Flow, lambda=0, order=c(1,1,1))
library(gstat)
install.packages("gstat")
install.packages(c("BH", "car", "dataRetrieval", "knitr", "ordinal", "pander", "plot3D", "plotrix", "R6", "rjson", "sp", "timeDate", "timeSeries", "waterData"))
library(devtools)
install_github("rforge/gstat")
install_github("rforge/gstat/pkg")
install.packages("gstat")
lakshmipur.sadar <- read.csv("~/Desktop/Kriging/lakshmipur.sadar.csv")
View(lakshmipur.sadar)
faridpur.sadar <- read.csv("~/Desktop/Kriging/faridpur.sadar.csv")
View(faridpur.sadar)
chapai.nawabganj.thana <- read.csv("~/Desktop/Kriging/chapai.nawabganj.thana.csv")
View(chapai.nawabganj.thana)
lakshmipur.sadar <- read.csv("~/Desktop/Kriging/lakshmipur.sadar.csv")
faridpur.sadar <- read.csv("~/Desktop/Kriging/faridpur.sadar.csv")
chapai.nawabganj.thana <- read.csv("~/Desktop/Kriging/chapai.nawabganj.thana.csv")
library(ggplot2)
g1 <- ggplot2(lakshmipur.sadar, aes(y=c, x=lat))
library(ggplot2)
g1 <- ggplot2(lakshmipur.sadar, aes(y=c, x=lat))
library(ggplot2)
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat))
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point()
g1
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
library(grid)
grid.arrange(g1,g2,nrow=2)
arrange.grid(g1,g2,nrow=2)
library(ggplot2)
library(gridExtra)
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
arrange.grid(g1,g2,nrow=2)
grid.arrange(g1,g2,nrow=2)
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
grid.arrange(g1,g2,nrow=2)
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon)) + geom_point(size=2) + stat_smooth2d(aes(c))
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon)) + geom_point(size=2) + stat2d_smooth(aes(c))
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon)) + geom_point(size=2) + stat_density2d((aes(c))
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon)) + geom_point(size=2) + stat_density2d((aes(c)))
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon)) + geom_point(size=2) + stat_density2d(aes(z=c))
g3
?stat_density2d
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
install.packages("gstat")
getOptions("repos")
options
?options
getOption("repos")
r <- getOption("repos")
r["CRAN2"] <- "http://cran.r-project.org"
options(repos=r)
install.packages("gstat")
install.packages("gstat")
session.info
sessionInfo()
install.packages("gstat")
library(devtools)
install_github("rforge/gstat/R")
install_github("rforge/gstat/pkg")
install.packages("spacetime")
install.packages("rforge/spacetime/pkg")
install_github("rforge/spacetime/pkg")
install_github("rforge/spacetime/pkg/spacetime")
install_github("rforge/gstat/pkg")
library(gstat)
variogram
?variogram
?gstat
gstat(id="c", c~lat+lon, ~lat+lon, lakshmipur.sadar)
data(meuse)
library(sp)
data(meuse)
x
meuse
head(meause)
head(meuse)
gstat(id="c", c~lat+lon, ~lat+lon, lakshmipur.sadar)
gstat(id="c", formula =  c~1, locations = ~lat+lon, data = lakshmipur.sadar)
gs <- gstat(id="c", formula =  c~1, locations = ~lat+lon, data = lakshmipur.sadar)
plot(variogram(gs))
gs <- gstat(id="c", formula =  c~lat+lon, locations = ~lat+lon, data = lakshmipur.sadar)
plot(variogram(gs))
gs <- gstat(id="c", formula =  c~lat+lon, locations = ~lat+lon, data = lakshmipur.sadar)
install.packages("automap")
install.packages("geoR")
library(geoR)
library(fields)
library(maps)
load("~/Downloads/RData.USmonthlyMet")
head(lakshmipur.sadar)
temp.geodata <- as.geodata(lakshmipur.sadar, coords.col = 1:2, data.col = 3)
lakshmipur.sadar.j <- jitterDupCoords(lakshmipur.sadar)
lakshmipur.sadar.j <- jitterDupCoords(lakshmipur.sadar[1:2])
lakshmipur.sadar.j <- jitterDupCoords(lakshmipur.sadar[,1:2])
summary(temp.geodata)
plot(temp.geodata)
plot(temp.geodata, trend="1st")
plot(temp.geodata, trend=~lat+lon)
plot(data = temp.geodata, trend=~lat+lon)
plot(temp.geodata)
plot(temp.geodata, trend=~lon+lat)
head(temp.geodata)
plot(temp.geodata, trend= ~lon+lat)
variog4(temp.geodata, option="bin", trend=~long+lat)
variog4(temp.geodata, option="bin", trend=~lon+lat)
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
library(ggplot2)
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
library(ggplot2)
library(gridExtra)
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
lakshmipur.sadar <- read.csv("~/Desktop/Kriging/lakshmipur.sadar.csv")
faridpur.sadar <- read.csv("~/Desktop/Kriging/faridpur.sadar.csv")
chapai.nawabganj.thana <- read.csv("~/Desktop/Kriging/chapai.nawabganj.thana.csv")
library(ggplot2)
library(gridExtra)
title = "Arsenic Concentration vs."
loc = "Laksmipur District |"
g1 <- ggplot(lakshmipur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(lakshmipur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(lakshmipur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
title = "Arsenic Concentration vs."
loc = "Faridpur |"
g1 <- ggplot(faridpur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(faridpur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(faridpur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
title = "Arsenic Concentration vs."
loc = "Faridpur District |"
g1 <- ggplot(faridpur.sadar, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(faridpur.sadar, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(faridpur.sadar, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
title = "Arsenic Concentration vs."
loc = "Nawabganj District |"
g1 <- ggplot(chapai.nawabganj.thana, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(chapai.nawabganj.thana, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(chapai.nawabganj.thana, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
title = "Arsenic Concentration vs."
loc = "Nawabganj District |"
g1 <- ggplot(chapai.nawabganj.thana, aes(y=c, x=lat)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g1 <- g1 + ggtitle(paste(loc, title, "Latitude | with LOESS"))
g1 <- g1 + stat_smooth()
g2 <- ggplot(chapai.nawabganj.thana, aes(y=c, x=lon)) + geom_point(size = 2) + ylab("arsenic concentration (mg/L)")
g2 <- g2 + ggtitle(paste(loc, title, "Longitude | with LOESS"))
g2 <- g2 + stat_smooth()
grid.arrange(g1,g2,nrow=2)
g3 <- ggplot(chapai.nawabganj.thana, aes(y=lat, x=lon))
g3 <- g3 + ggtitle(paste(loc, title, "Spatial Distribution | 2d Gaussian Kernel Smooth"))
g3 <- g3 + geom_point(size=2) + stat_density2d(aes(z=c))
g3
require(knitr)
require(animation)
ani.options(interval=0.200)
opts_knit$set(animation.fun = hook_scianimator)
require(knitr)
require(animation)
ani.options(interval=0.200)
opts_knit$set(animation.fun = hook_scianimator)
sapply(ganges, function(x) sum(is.na(x)))
ganges <- read.csv("data/Ganges.csv")
head(ganges)
require(reshape2)
ganges <- melt(ganges, id.vars="Year", variable.name="Month.Abb", value.name="Flow")
head(ganges)
month.abb
getMID <- function(x){ match(x, month.abb) }
require(plyr)
ganges <- transform(ganges, MID = getMID(Month.Abb))
head(ganges)
ganges <- arrange(ganges, Year, MID)
head(ganges)
ganges$Index <- 1:nrow(ganges)
head(ganges)
setwd("~/Desktop/BDA/Time Series Analysis")
ganges <- read.csv("data/Ganges.csv")
head(ganges)
sapply(ganges, function(x) sum(is.na(x)))
require(reshape2)
ganges <- melt(ganges, id.vars="Year", variable.name="Month.Abb", value.name="Flow")
head(ganges)
month.abb
getMID <- function(x){ match(x, month.abb) }
getMID("May")
require(plyr)
ganges <- transform(ganges, MID = getMID(Month.Abb))
head(ganges)
ganges <- arrange(ganges, Year, MID)
head(ganges)
tail(ganges)
ganges$Index <- 1:nrow(ganges)
head(ganges)
require(ggplot2)
timerange <- paste("(", min(ganges$Year), "-", max(ganges$Year), ")")
p1 <- ggplot(ganges, aes(y=Flow, x=Index)) + geom_line()
p1 <- p1 + ggtitle(paste("Time Series of Ganges Monthly Mean Flow", timerange))
p1 <- p1 + ylab("Flow (CFS)") + theme_bw()
p1
p1 <- ggplot(ganges, aes(y=Flow, x=Month.Abb)) + geom_boxplot() + theme_bw()
p1 <- p1 + ggtitle(paste("Boxplot of Ganges Monthly Mean Flows by Month", timerange))
p1
sum.stats <- ddply(ganges, "Month.Abb", summarize,
Mean = mean(Flow),
SD = sd(Flow),
CV = Mean/SD)
sum.stats
require(pander)
panderOptions('digits', 3)
panderOptions('keep.trailing.zeros', TRUE)
pander(sum.stats)
timerange <- paste("(", min(ganges$Year), "-", max(ganges$Year), ")")
p1 <- ggplot(ganges, aes(y=log(Flow), x=Index)) + geom_line()
p1 <- p1 + ggtitle(paste("Time Series of Ganges Monthly Log-Transformed Mean Flow", timerange))
p1 <- p1 + ylab("Log Flow") + theme_bw()
p1
for(i in 1:12){
ganges.lag12 = rep(NA, nrow(ganges))
ganges.lag12[1:12==(i)] = log(ganges$Flow[1:12==(i)])
p1 <- ggplot(ganges, aes(y=log(Flow), x=Index)) + theme_bw()
p1 <- p1 + geom_line() + geom_point(aes(y=ganges.lag12)) + ylab("Log Flow")
p1 <- p1 + ggtitle(paste("Highlighting the Lag 12 Correlation in Ganges Mean Monthly Flows",
timerange))
print(p1)
}
ganges <- transform(ganges, Log.Flow = log(Flow))
head(ganges)
log.flow.monthly.stats <- ddply(ganges, "Month.Abb", summarize, L.F.M.M = mean(L.F), L.F.M.SD = sd(L.F))
head(log.flow.monthly.stats)
ganges <- transform(ganges, L.F.= log(Flow))
head(ganges)
log.flow.monthly.stats <- ddply(ganges, "Month.Abb", summarize, L.F.M.M = mean(L.F), L.F.M.SD = sd(L.F))
head(log.flow.monthly.stats)
log.flow.monthly.stats <- ddply(ganges, "Month.Abb", summarize, L.F.M.M = mean(L.F), L.F.M.SD = sd(L.F))
head(log.flow.monthly.stats)
ganges <- join(ganges, log.flow.monthly.stats, by="Month.Abb")
head(ganges)
require(knitr)
require(animation)
ani.options(interval=0.200)
opts_knit$set(animation.fun = hook_scianimator)
ganges <- read.csv("data/Ganges.csv")
head(ganges)
sapply(ganges, function(x) sum(is.na(x)))
require(reshape2)
ganges <- melt(ganges, id.vars="Year", variable.name="Month.Abb", value.name="Flow")
head(ganges)
month.abb
getMID <- function(x){ match(x, month.abb) }
getMID("May")
require(plyr)
ganges <- transform(ganges, MID = getMID(Month.Abb))
head(ganges)
ganges <- arrange(ganges, Year, MID)
head(ganges)
tail(ganges)
ganges$Index <- 1:nrow(ganges)
head(ganges)
require(ggplot2)
timerange <- paste("(", min(ganges$Year), "-", max(ganges$Year), ")")
p1 <- ggplot(ganges, aes(y=Flow, x=Index)) + geom_line()
p1 <- p1 + ggtitle(paste("Time Series of Ganges Monthly Mean Flow", timerange))
p1 <- p1 + ylab("Flow (CFS)") + theme_bw()
p1
p1 <- ggplot(ganges, aes(y=Flow, x=Month.Abb)) + geom_boxplot() + theme_bw()
p1 <- p1 + ggtitle(paste("Boxplot of Ganges Monthly Mean Flows by Month", timerange))
p1
sum.stats <- ddply(ganges, "Month.Abb", summarize,
Mean = mean(Flow),
SD = sd(Flow),
CV = Mean/SD)
sum.stats
require(pander)
panderOptions('digits', 3)
panderOptions('keep.trailing.zeros', TRUE)
pander(sum.stats)
timerange <- paste("(", min(ganges$Year), "-", max(ganges$Year), ")")
p1 <- ggplot(ganges, aes(y=log(Flow), x=Index)) + geom_line()
p1 <- p1 + ggtitle(paste("Time Series of Ganges Monthly Log-Transformed Mean Flow", timerange))
p1 <- p1 + ylab("Log Flow") + theme_bw()
p1
for(i in 1:12){
ganges.lag12 = rep(NA, nrow(ganges))
ganges.lag12[1:12==(i)] = log(ganges$Flow[1:12==(i)])
p1 <- ggplot(ganges, aes(y=log(Flow), x=Index)) + theme_bw()
p1 <- p1 + geom_line() + geom_point(aes(y=ganges.lag12)) + ylab("Log Flow")
p1 <- p1 + ggtitle(paste("Highlighting the Lag 12 Correlation in Ganges Mean Monthly Flows",
timerange))
print(p1)
}
ganges <- transform(ganges, Log.Flow = log(Flow))
head(ganges)
log.flow.monthly.stats <- ddply(ganges, "Month.Abb", summarize, Log.Flow.M.Mean = mean(Log.Flow), Log.Flow.M.SD = sd(Log.Flow))
head(log.flow.monthly.stats)
ganges <- join(ganges, log.flow.monthly.stats, by="Month.Abb")
head(ganges)
ganges <- mutate(ganges,
L.F.M.Mean.Removed = Log.Flow - Log.Flow.M.Mean,
L.F.Standardized = L.F.M.Mean.Removed / Log.Flow.M.SD)
head(ganges)
require(knitr)
require(animation)
ani.options(interval=0.200)
opts_knit$set(animation.fun = hook_scianimator)
ganges <- read.csv("data/Ganges.csv")
head(ganges)
sapply(ganges, function(x) sum(is.na(x)))
require(reshape2)
ganges <- melt(ganges, id.vars="Year", variable.name="Month.Abb", value.name="Flow")
head(ganges)
month.abb
getMID <- function(x){ match(x, month.abb) }
getMID("May")
ganges <- arrange(ganges, Year, MID)
head(ganges)
ganges$Index <- 1:nrow(ganges)
head(ganges)
ganges <- transform(ganges, Log.Flow = log(Flow))
head(ganges)
log.flow.monthly.stats <- ddply(ganges, "Month.Abb", summarize, Log.Flow.M.Mean = mean(Log.Flow), Log.Flow.M.SD = sd(Log.Flow))
head(log.flow.monthly.stats)
ganges <- join(ganges, log.flow.monthly.stats, by="Month.Abb")
head(ganges)
ganges <- mutate(ganges,
Log.Flow.M.Mean.Removed = Log.Flow - Log.Flow.M.Mean,
Log.Flow.Standardized = Log.Flow.M.Mean.Removed / Log.Flow.M.SD)
head(ganges)
detach("package:knitr", unload=TRUE)
install_github("Kevin-M-Smith/knitr")
library("devtools")
library(devtools)
install_github("Kevin-M-Smith/knitr")
remove.packages("knitr")
install_github("Kevin-M-Smith/knitr")
library(knitr)
remove(knitr)
remove.packages("knitr")
install.packages("knitr")
library(knitr)
